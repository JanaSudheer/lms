name: LMSDEPLOYSUDHEER
on: workflow_dispatch
jobs:
  approval:
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: send notification to slack
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            channel: project-lms
            text: "lms production deployment started"
  sonaranalysis:
    needs: approval
    name: sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  database:
    needs:
      - approval
    runs-on: self-hosted
    steps:
      - name: create network
        run: |
          if docker network ls --format '{{ .Name }}' | grep -wq lmsnetwork; then
            echo "lmsnetwork exist"
          else
            docker network create lmsnetwork
          fi
      - name: check whether the database lmsdb exist or not
        run: |
          if docker ps -a --format '{{ .Names }}' | grep -wq lmsdb; then
            echo "lmsdb container exists"
          else
            docker container run -dt --name lmsdb -p 5432:5432 --network lmsnetwork -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD}} postgres
          fi  
  backend:
    needs:
     - approval
     - database
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Build Docker Image
        run: |
          cd api
          docker build -t sudheeer555/lmsdockerapi .
      - name: Run Container
        run: docker container run -dt --name api --network lmsnetwork -p 3000:3000 -e DATABASE_URL=postgresql://postgres:Admin123@lmsdb:5432/postgres -e PORT=3000 -e MODE=Prod sudheeer555/lmsdockerapi
        
     
